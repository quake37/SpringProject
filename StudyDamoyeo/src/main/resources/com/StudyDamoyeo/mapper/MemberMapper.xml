<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.o//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.StudyDamoyeo.mapper.MemberMapper">

	<select id="getList"
		resultType="com.StudyDamoyeo.domain.MemberVO">
		select * from member where mno
		&gt; 0 order by mno desc
	</select>

	<insert id="insert">
		insert into member (mno,userId, pw, nickname, phone,
		email, memberType, profile_Img)
		values(member_mno_seq.nextval,
		#{userId}, #{pw}, #{nickname}, #{phone}, #{email}, #{memberType},
		#{profile_Img})
	</insert>

	<insert id="insertAuth">
		insert into authority values(#{userid},#{auth} )
	</insert>
	<resultMap type="com.StudyDamoyeo.domain.MemberVO"
		id="memberMap">
		<id property="userId" column="userId" />
		<result property="userId" column="userId" />
		<result property="pw" column="pw" />
		<result property="nickname" column="nickname" />
		<result property="phone" column="phone" />
		<result property="email" column="email" />
		<result property="profile_Img" column="profile_Img" />
		<result property="memberType" column="memberType" />
		<result property="regdate" column="regdate" />
		<result property="udate" column="udate" />
		<result property="verified" column="verified" />
		<collection property="authList" resultMap="authMap">
		</collection>
	</resultMap>

	<resultMap type="com.StudyDamoyeo.domain.AuthVO" id="authMap">
		<result property="userid" column="userid" />
		<result property="auth" column="auth" />
	</resultMap>

	<select id="read" resultMap="memberMap">
		SELECT
		mem.*, auth.AUTH
		FROM
		member mem
		LEFT OUTER JOIN authority auth on mem.userId = auth.userId
		WHERE
		mem.userId = #{userId}
	</select>
	<delete id="delete">
		delete member where userid = #{userid}
	</delete>
	<update id="update">
		update member set nickname =#{nickname},phone
		=#{phone}, email = #{email}, verified =#{verified},
		udate = sysdate
		where userid =#{userid}
	</update>
	<select id="login" resultType="int">
		select * from member where userid
		= #{userid} and pw=#{pw}
	</select>
	<select id="checkid" resultType="int">
		SELECT COUNT(*) FROM member WHERE userid = #{userid}

	</select>

	<select id="checknickname" resultType="int">
		SELECT COUNT(*) FROM member WHERE nickname = #{nickname}

	</select>
	<select id="checkAuth" resultType="String">
		select auth from authority
		where userId = #{userId}
	</select>
	<select id="updateEmailCheck" resultType="int">
		select COUNT(*) FROM
		member WHERE userId = #{userId} and email = #{email}
	</select>
	<update id="createAuthKey">
		update member set emailKey = #{emailKey} where userId =#{userId}
	</update>
	<update id="updateVerified">
		update member set verified = #{verified} where userId = #{userId}
	</update>

</mapper>