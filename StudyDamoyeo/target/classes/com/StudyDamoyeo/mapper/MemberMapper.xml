<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.o//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.StudyDamoyeo.mapper.MemberMapper">

	<select id="getList" resultType="com.StudyDamoyeo.domain.MemberVO">
		select * from member where mno
		&gt; 0 order by mno desc
	</select>
	
	<insert id="insert">
		insert into member (mno,id, pw, nickname, phone, email, memberType, profile_Img, authority)
		values(member_mno_seq.nextval, #{id}, #{pw}, #{nickname}, #{phone}, #{email}, #{memberType}, #{profile_Img}, #{authority})
	</insert>
	
	
	<resultMap type="com.StudyDamoyeo.domain.MemberVO" id="memberMap">
		<id property="userid" column="id" />
		<result property="userid" column="id" />
		<result property="userpw" column="pw" />
		<result property="userName" column="nickname" />
		<result property="regDate" column="regdate" />
		<result property="updateDate" column="udate" />
		<collection property="authList" resultMap="authMap">
		</collection>
	</resultMap>

	<resultMap type="com.StudyDamoyeo.domain.AuthVO" id="authMap">
		<result property="userid" column="userid" />
		<result property="auth" column="auth" />
	</resultMap>

	<select id="read" resultMap="memberMap">
		SELECT
		mem.id, pw, nickname, enabled, regdate, udate, auth
		FROM
		member mem LEFT OUTER JOIN member_auth auth on mem.id = auth.userid
		WHERE mem.id = #{userid}
	</select>
	<delete id="delete">
		delete member where id = #{id}
	</delete>
	<update id="update">
		update member set pw=#{pw}, nickname =#{nickname},phone =#{phone}, email = #{email}, profile_Img =#{profile_Img},
		udate = sysdate where id =#{id}
	</update>
	<select id="login" resultType="int">
		select * from member where id = #{id} and pw=#{pw}
	</select>
	<select id="checkid"  parameterType="String" resultType="int">
		  SELECT COUNT(*) FROM member
      WHERE
          id = #{userid}
	</select>
</mapper>